#!/bin/bash

WHICH_JAVA=$( which java )

if [ "$WHICH_JAVA" == "" ]; then
  (>&2 echo "error: java not found")
  exit 1
fi

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null && pwd )"

#if [ "$VARMYKNIFE_JAR" == "" ]; then
#  (>&2 echo "error: VARMYKNIFE_JAR environment variable not found")
#  exit 1
#fi
#(>&2 echo "DIR=${DIR}")
VARMYKNIFE_JAR=${DIR}/vArmyKnife.jar
#(>&2 echo "VARMYKNIFE_JAR=${VARMYKNIFE_JAR}")

if [ ! -e "${VARMYKNIFE_JAR}" ]; then
  #(>&2 echo "NOTE: vArmyKnife.jar file not found in dir, checking parent...")
  VARMYKNIFE_JAR=${DIR}/../vArmyKnife.jar
fi

if [ ! -e "${VARMYKNIFE_JAR}" ]; then
  (>&2 echo "ERRORWARNING: vArmyKnife.jar file not found!")
fi

(>&2 echo "JAVA=${WHICH_JAVA}")
(>&2 echo "JAR=${VARMYKNIFE_JAR}")

JAVAOPTS="";
while [ "${1:0:1}" == "-" ]; do
  JAVAOPTS="$JAVAOPTS $1"
  shift
done

#To echo to stderr:
#(>&2 echo "error")

(>&2 echo "JAVAOPTS=\"${JAVAOPTS}\"")
(>&2 echo "ANNOJAR_COMMAND=${1}...")

java $JAVAOPTS -jar $VARMYKNIFE_JAR "$@"







